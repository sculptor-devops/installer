<?php

namespace Tests\Feature;

use League\Flysystem\FileNotFoundException;
use Sculptor\Services\Configuration;
use Sculptor\Stages;
use Sculptor\Stages\StageFactory;
use Sculptor\Stages\StageResolver;
use Tests\Stubs\Templates;
use Tests\Stubs\Version;
use Tests\TestCase;

class StagesTest extends TestCase
{
    private $stages;

    /**
     * @throws FileNotFoundException
     */
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $version = Version::make();

        $configuration = new Configuration(Templates::make());

        $resolver = new StageResolver();

        $factory = new StageFactory($configuration, $resolver);

        $this->stages = new Stages($factory, $version);
    }

    /**
     * A basic test example.
     *
     * @return void
     */
    public function testListCount()
    {
        $this->assertCount(2, $this->stages->list());
    }

    public function testListTable()
    {
        $this->assertEquals(
            [
                [
                    "stage" => 1,
                    "name" => "Credentials"
                ],
                [
                    "stage" => 2,
                    "name" => "Test Stage"
                ]
            ],
            $this->stages->list()
        );
    }

    public function testSingleStage()
    {
        $this->assertTrue($this->stages->stage('test stage'));

        $this->assertTrue($this->stages->stage('credentials'));
    }

    public function testSingleStageNonExistent()
    {
        $this->assertFalse($this->stages->stage('test stage non existent'));
    }

    public function testAllStages()
    {
        $this->assertTrue($this->stages->run(null));
    }
}
