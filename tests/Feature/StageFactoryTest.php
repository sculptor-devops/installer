<?php

namespace Tests\Feature;

use League\Flysystem\FileNotFoundException;
use Sculptor\Services\Configuration;
use Sculptor\Stages\StageFactory;
use Sculptor\Stages\V1804\TestStage;
use Tests\Stubs\Templates;
use Tests\Stubs\Version;
use Tests\TestCase;

/**
 * (c) Alessandro Cappellozza <alessandro.cappellozza@gmail.com>
 *  For the full copyright and license information, please view the LICENSE
 *  file that was distributed with this source code.
 */
class StageFactoryTest extends TestCase
{

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    /**
     * @throws FileNotFoundException
     */
    public function testResolveList()
    {
        $version = Version::make();

        $configuration = new Configuration(Templates::make());

        $factory = new StageFactory($configuration);

        $factory->version($version->version());

        $this->assertCount(2, $factory->list());

        $this->assertEquals(
            [
            'Sculptor\Stages\V1804\Credentials',
            'Sculptor\Stages\V1804\TestStage'],
            $factory->list()
        );

        $this->assertEquals(['Credentials', 'TestStage'], $factory->all());

        $this->assertEquals('TestStage', $factory->make('TestStage')->className());

        $this->assertEquals('Test Stage', $factory->make('TestStage')->name());

        $this->assertEquals('TestStage', $factory->find('test stage')->className());

        $this->assertEquals(null, $factory->find('test stage not exists'));

        $this->assertEquals([
            "php" => "7.2",
            "user" => "custom",
            "port" => "1234",
            "stages" => "credentials,teststage",
            "password" => "password",
            "db_password" => "dbPassword"
          ]
        , $factory->env()->toArray());
    }
}
